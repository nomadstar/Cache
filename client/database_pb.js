// source: database.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = (function() {
  if (this) { return this; }
  if (typeof window !== 'undefined') { return window; }
  if (typeof global !== 'undefined') { return global; }
  if (typeof self !== 'undefined') { return self; }
  return Function('return this')();
}.call(null));

goog.exportSymbol('proto.postgres.PostgresRequest', null, global);
goog.exportSymbol('proto.postgres.PostgresResponse', null, global);
goog.exportSymbol('proto.postgres.PostgresRow', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.postgres.PostgresRow = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.postgres.PostgresRow, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.postgres.PostgresRow.displayName = 'proto.postgres.PostgresRow';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.postgres.PostgresRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.postgres.PostgresRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.postgres.PostgresRequest.displayName = 'proto.postgres.PostgresRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.postgres.PostgresResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.postgres.PostgresResponse.repeatedFields_, null);
};
goog.inherits(proto.postgres.PostgresResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.postgres.PostgresResponse.displayName = 'proto.postgres.PostgresResponse';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.postgres.PostgresRow.prototype.toObject = function(opt_includeInstance) {
  return proto.postgres.PostgresRow.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.postgres.PostgresRow} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.postgres.PostgresRow.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    appId: jspb.Message.getFieldWithDefault(msg, 2, 0),
    appName: jspb.Message.getFieldWithDefault(msg, 3, ""),
    reviewId: jspb.Message.getFieldWithDefault(msg, 4, 0),
    language: jspb.Message.getFieldWithDefault(msg, 5, ""),
    review: jspb.Message.getFieldWithDefault(msg, 6, ""),
    timestampCreated: jspb.Message.getFieldWithDefault(msg, 7, 0),
    timestampUpdated: jspb.Message.getFieldWithDefault(msg, 8, 0),
    recommended: jspb.Message.getBooleanFieldWithDefault(msg, 9, false),
    votesHelpful: jspb.Message.getFieldWithDefault(msg, 10, 0),
    votesFunny: jspb.Message.getFieldWithDefault(msg, 11, 0),
    weightedVoteScore: jspb.Message.getFloatingPointFieldWithDefault(msg, 12, 0.0),
    commentCount: jspb.Message.getFieldWithDefault(msg, 13, 0),
    steamPurchase: jspb.Message.getBooleanFieldWithDefault(msg, 14, false),
    receivedForFree: jspb.Message.getBooleanFieldWithDefault(msg, 15, false),
    writtenDuringEarlyAccess: jspb.Message.getBooleanFieldWithDefault(msg, 16, false),
    authorSteamid: jspb.Message.getFieldWithDefault(msg, 17, 0),
    authorNumGamesOwned: jspb.Message.getFieldWithDefault(msg, 18, 0),
    authorNumReviews: jspb.Message.getFieldWithDefault(msg, 19, 0),
    authorPlaytimeForever: jspb.Message.getFloatingPointFieldWithDefault(msg, 20, 0.0),
    authorPlaytimeLastTwoWeeks: jspb.Message.getFloatingPointFieldWithDefault(msg, 21, 0.0),
    authorPlaytimeAtReview: jspb.Message.getFloatingPointFieldWithDefault(msg, 22, 0.0),
    authorLastPlayed: jspb.Message.getFloatingPointFieldWithDefault(msg, 23, 0.0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.postgres.PostgresRow}
 */
proto.postgres.PostgresRow.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.postgres.PostgresRow;
  return proto.postgres.PostgresRow.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.postgres.PostgresRow} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.postgres.PostgresRow}
 */
proto.postgres.PostgresRow.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setAppId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setAppName(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setReviewId(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setLanguage(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setReview(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setTimestampCreated(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setTimestampUpdated(value);
      break;
    case 9:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setRecommended(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setVotesHelpful(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setVotesFunny(value);
      break;
    case 12:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setWeightedVoteScore(value);
      break;
    case 13:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setCommentCount(value);
      break;
    case 14:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSteamPurchase(value);
      break;
    case 15:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setReceivedForFree(value);
      break;
    case 16:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setWrittenDuringEarlyAccess(value);
      break;
    case 17:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setAuthorSteamid(value);
      break;
    case 18:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setAuthorNumGamesOwned(value);
      break;
    case 19:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setAuthorNumReviews(value);
      break;
    case 20:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setAuthorPlaytimeForever(value);
      break;
    case 21:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setAuthorPlaytimeLastTwoWeeks(value);
      break;
    case 22:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setAuthorPlaytimeAtReview(value);
      break;
    case 23:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setAuthorLastPlayed(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.postgres.PostgresRow.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.postgres.PostgresRow.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.postgres.PostgresRow} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.postgres.PostgresRow.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getAppId();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getAppName();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getReviewId();
  if (f !== 0) {
    writer.writeInt64(
      4,
      f
    );
  }
  f = message.getLanguage();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getReview();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getTimestampCreated();
  if (f !== 0) {
    writer.writeInt64(
      7,
      f
    );
  }
  f = message.getTimestampUpdated();
  if (f !== 0) {
    writer.writeInt64(
      8,
      f
    );
  }
  f = message.getRecommended();
  if (f) {
    writer.writeBool(
      9,
      f
    );
  }
  f = message.getVotesHelpful();
  if (f !== 0) {
    writer.writeInt64(
      10,
      f
    );
  }
  f = message.getVotesFunny();
  if (f !== 0) {
    writer.writeInt64(
      11,
      f
    );
  }
  f = message.getWeightedVoteScore();
  if (f !== 0.0) {
    writer.writeFloat(
      12,
      f
    );
  }
  f = message.getCommentCount();
  if (f !== 0) {
    writer.writeInt64(
      13,
      f
    );
  }
  f = message.getSteamPurchase();
  if (f) {
    writer.writeBool(
      14,
      f
    );
  }
  f = message.getReceivedForFree();
  if (f) {
    writer.writeBool(
      15,
      f
    );
  }
  f = message.getWrittenDuringEarlyAccess();
  if (f) {
    writer.writeBool(
      16,
      f
    );
  }
  f = message.getAuthorSteamid();
  if (f !== 0) {
    writer.writeInt64(
      17,
      f
    );
  }
  f = message.getAuthorNumGamesOwned();
  if (f !== 0) {
    writer.writeInt64(
      18,
      f
    );
  }
  f = message.getAuthorNumReviews();
  if (f !== 0) {
    writer.writeInt64(
      19,
      f
    );
  }
  f = message.getAuthorPlaytimeForever();
  if (f !== 0.0) {
    writer.writeFloat(
      20,
      f
    );
  }
  f = message.getAuthorPlaytimeLastTwoWeeks();
  if (f !== 0.0) {
    writer.writeFloat(
      21,
      f
    );
  }
  f = message.getAuthorPlaytimeAtReview();
  if (f !== 0.0) {
    writer.writeFloat(
      22,
      f
    );
  }
  f = message.getAuthorLastPlayed();
  if (f !== 0.0) {
    writer.writeFloat(
      23,
      f
    );
  }
};


/**
 * optional int32 id = 1;
 * @return {number}
 */
proto.postgres.PostgresRow.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.postgres.PostgresRow} returns this
 */
proto.postgres.PostgresRow.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int64 app_id = 2;
 * @return {number}
 */
proto.postgres.PostgresRow.prototype.getAppId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.postgres.PostgresRow} returns this
 */
proto.postgres.PostgresRow.prototype.setAppId = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string app_name = 3;
 * @return {string}
 */
proto.postgres.PostgresRow.prototype.getAppName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.postgres.PostgresRow} returns this
 */
proto.postgres.PostgresRow.prototype.setAppName = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional int64 review_id = 4;
 * @return {number}
 */
proto.postgres.PostgresRow.prototype.getReviewId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.postgres.PostgresRow} returns this
 */
proto.postgres.PostgresRow.prototype.setReviewId = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional string language = 5;
 * @return {string}
 */
proto.postgres.PostgresRow.prototype.getLanguage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.postgres.PostgresRow} returns this
 */
proto.postgres.PostgresRow.prototype.setLanguage = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string review = 6;
 * @return {string}
 */
proto.postgres.PostgresRow.prototype.getReview = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.postgres.PostgresRow} returns this
 */
proto.postgres.PostgresRow.prototype.setReview = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional int64 timestamp_created = 7;
 * @return {number}
 */
proto.postgres.PostgresRow.prototype.getTimestampCreated = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.postgres.PostgresRow} returns this
 */
proto.postgres.PostgresRow.prototype.setTimestampCreated = function(value) {
  return jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * optional int64 timestamp_updated = 8;
 * @return {number}
 */
proto.postgres.PostgresRow.prototype.getTimestampUpdated = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {number} value
 * @return {!proto.postgres.PostgresRow} returns this
 */
proto.postgres.PostgresRow.prototype.setTimestampUpdated = function(value) {
  return jspb.Message.setProto3IntField(this, 8, value);
};


/**
 * optional bool recommended = 9;
 * @return {boolean}
 */
proto.postgres.PostgresRow.prototype.getRecommended = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 9, false));
};


/**
 * @param {boolean} value
 * @return {!proto.postgres.PostgresRow} returns this
 */
proto.postgres.PostgresRow.prototype.setRecommended = function(value) {
  return jspb.Message.setProto3BooleanField(this, 9, value);
};


/**
 * optional int64 votes_helpful = 10;
 * @return {number}
 */
proto.postgres.PostgresRow.prototype.getVotesHelpful = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/**
 * @param {number} value
 * @return {!proto.postgres.PostgresRow} returns this
 */
proto.postgres.PostgresRow.prototype.setVotesHelpful = function(value) {
  return jspb.Message.setProto3IntField(this, 10, value);
};


/**
 * optional int64 votes_funny = 11;
 * @return {number}
 */
proto.postgres.PostgresRow.prototype.getVotesFunny = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 11, 0));
};


/**
 * @param {number} value
 * @return {!proto.postgres.PostgresRow} returns this
 */
proto.postgres.PostgresRow.prototype.setVotesFunny = function(value) {
  return jspb.Message.setProto3IntField(this, 11, value);
};


/**
 * optional float weighted_vote_score = 12;
 * @return {number}
 */
proto.postgres.PostgresRow.prototype.getWeightedVoteScore = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 12, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.postgres.PostgresRow} returns this
 */
proto.postgres.PostgresRow.prototype.setWeightedVoteScore = function(value) {
  return jspb.Message.setProto3FloatField(this, 12, value);
};


/**
 * optional int64 comment_count = 13;
 * @return {number}
 */
proto.postgres.PostgresRow.prototype.getCommentCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 13, 0));
};


/**
 * @param {number} value
 * @return {!proto.postgres.PostgresRow} returns this
 */
proto.postgres.PostgresRow.prototype.setCommentCount = function(value) {
  return jspb.Message.setProto3IntField(this, 13, value);
};


/**
 * optional bool steam_purchase = 14;
 * @return {boolean}
 */
proto.postgres.PostgresRow.prototype.getSteamPurchase = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 14, false));
};


/**
 * @param {boolean} value
 * @return {!proto.postgres.PostgresRow} returns this
 */
proto.postgres.PostgresRow.prototype.setSteamPurchase = function(value) {
  return jspb.Message.setProto3BooleanField(this, 14, value);
};


/**
 * optional bool received_for_free = 15;
 * @return {boolean}
 */
proto.postgres.PostgresRow.prototype.getReceivedForFree = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 15, false));
};


/**
 * @param {boolean} value
 * @return {!proto.postgres.PostgresRow} returns this
 */
proto.postgres.PostgresRow.prototype.setReceivedForFree = function(value) {
  return jspb.Message.setProto3BooleanField(this, 15, value);
};


/**
 * optional bool written_during_early_access = 16;
 * @return {boolean}
 */
proto.postgres.PostgresRow.prototype.getWrittenDuringEarlyAccess = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 16, false));
};


/**
 * @param {boolean} value
 * @return {!proto.postgres.PostgresRow} returns this
 */
proto.postgres.PostgresRow.prototype.setWrittenDuringEarlyAccess = function(value) {
  return jspb.Message.setProto3BooleanField(this, 16, value);
};


/**
 * optional int64 author_steamid = 17;
 * @return {number}
 */
proto.postgres.PostgresRow.prototype.getAuthorSteamid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 17, 0));
};


/**
 * @param {number} value
 * @return {!proto.postgres.PostgresRow} returns this
 */
proto.postgres.PostgresRow.prototype.setAuthorSteamid = function(value) {
  return jspb.Message.setProto3IntField(this, 17, value);
};


/**
 * optional int64 author_num_games_owned = 18;
 * @return {number}
 */
proto.postgres.PostgresRow.prototype.getAuthorNumGamesOwned = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 18, 0));
};


/**
 * @param {number} value
 * @return {!proto.postgres.PostgresRow} returns this
 */
proto.postgres.PostgresRow.prototype.setAuthorNumGamesOwned = function(value) {
  return jspb.Message.setProto3IntField(this, 18, value);
};


/**
 * optional int64 author_num_reviews = 19;
 * @return {number}
 */
proto.postgres.PostgresRow.prototype.getAuthorNumReviews = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 19, 0));
};


/**
 * @param {number} value
 * @return {!proto.postgres.PostgresRow} returns this
 */
proto.postgres.PostgresRow.prototype.setAuthorNumReviews = function(value) {
  return jspb.Message.setProto3IntField(this, 19, value);
};


/**
 * optional float author_playtime_forever = 20;
 * @return {number}
 */
proto.postgres.PostgresRow.prototype.getAuthorPlaytimeForever = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 20, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.postgres.PostgresRow} returns this
 */
proto.postgres.PostgresRow.prototype.setAuthorPlaytimeForever = function(value) {
  return jspb.Message.setProto3FloatField(this, 20, value);
};


/**
 * optional float author_playtime_last_two_weeks = 21;
 * @return {number}
 */
proto.postgres.PostgresRow.prototype.getAuthorPlaytimeLastTwoWeeks = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 21, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.postgres.PostgresRow} returns this
 */
proto.postgres.PostgresRow.prototype.setAuthorPlaytimeLastTwoWeeks = function(value) {
  return jspb.Message.setProto3FloatField(this, 21, value);
};


/**
 * optional float author_playtime_at_review = 22;
 * @return {number}
 */
proto.postgres.PostgresRow.prototype.getAuthorPlaytimeAtReview = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 22, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.postgres.PostgresRow} returns this
 */
proto.postgres.PostgresRow.prototype.setAuthorPlaytimeAtReview = function(value) {
  return jspb.Message.setProto3FloatField(this, 22, value);
};


/**
 * optional float author_last_played = 23;
 * @return {number}
 */
proto.postgres.PostgresRow.prototype.getAuthorLastPlayed = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 23, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.postgres.PostgresRow} returns this
 */
proto.postgres.PostgresRow.prototype.setAuthorLastPlayed = function(value) {
  return jspb.Message.setProto3FloatField(this, 23, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.postgres.PostgresRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.postgres.PostgresRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.postgres.PostgresRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.postgres.PostgresRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    fieldValue: jspb.Message.getFieldWithDefault(msg, 1, ""),
    fieldNumber: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.postgres.PostgresRequest}
 */
proto.postgres.PostgresRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.postgres.PostgresRequest;
  return proto.postgres.PostgresRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.postgres.PostgresRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.postgres.PostgresRequest}
 */
proto.postgres.PostgresRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setFieldValue(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setFieldNumber(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.postgres.PostgresRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.postgres.PostgresRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.postgres.PostgresRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.postgres.PostgresRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFieldValue();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getFieldNumber();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
};


/**
 * optional string field_value = 1;
 * @return {string}
 */
proto.postgres.PostgresRequest.prototype.getFieldValue = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.postgres.PostgresRequest} returns this
 */
proto.postgres.PostgresRequest.prototype.setFieldValue = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int32 field_number = 2;
 * @return {number}
 */
proto.postgres.PostgresRequest.prototype.getFieldNumber = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.postgres.PostgresRequest} returns this
 */
proto.postgres.PostgresRequest.prototype.setFieldNumber = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.postgres.PostgresResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.postgres.PostgresResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.postgres.PostgresResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.postgres.PostgresResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.postgres.PostgresResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    rowsList: jspb.Message.toObjectList(msg.getRowsList(),
    proto.postgres.PostgresRow.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.postgres.PostgresResponse}
 */
proto.postgres.PostgresResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.postgres.PostgresResponse;
  return proto.postgres.PostgresResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.postgres.PostgresResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.postgres.PostgresResponse}
 */
proto.postgres.PostgresResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.postgres.PostgresRow;
      reader.readMessage(value,proto.postgres.PostgresRow.deserializeBinaryFromReader);
      msg.addRows(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.postgres.PostgresResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.postgres.PostgresResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.postgres.PostgresResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.postgres.PostgresResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRowsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.postgres.PostgresRow.serializeBinaryToWriter
    );
  }
};


/**
 * repeated PostgresRow rows = 1;
 * @return {!Array<!proto.postgres.PostgresRow>}
 */
proto.postgres.PostgresResponse.prototype.getRowsList = function() {
  return /** @type{!Array<!proto.postgres.PostgresRow>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.postgres.PostgresRow, 1));
};


/**
 * @param {!Array<!proto.postgres.PostgresRow>} value
 * @return {!proto.postgres.PostgresResponse} returns this
*/
proto.postgres.PostgresResponse.prototype.setRowsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.postgres.PostgresRow=} opt_value
 * @param {number=} opt_index
 * @return {!proto.postgres.PostgresRow}
 */
proto.postgres.PostgresResponse.prototype.addRows = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.postgres.PostgresRow, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.postgres.PostgresResponse} returns this
 */
proto.postgres.PostgresResponse.prototype.clearRowsList = function() {
  return this.setRowsList([]);
};


goog.object.extend(exports, proto.postgres);
